"""add business closure fields to businesses

Revision ID: 851cec9d964f
Revises: 6bc1e2d3f938
Create Date: 2025-09-18 11:35:57.108145

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '851cec9d964f'
down_revision: Union[str, None] = '6bc1e2d3f938'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('schema_migrations')
    op.drop_table('ar_internal_metadata')
    op.add_column('businesses', sa.Column('is_closed', sa.Boolean(), nullable=True))
    op.add_column('businesses', sa.Column('opened_on', sa.Date(), nullable=True))
    op.add_column('businesses', sa.Column('employee_count', sa.Integer(), nullable=True))
    op.drop_index('ux_units_number_address', table_name='units')
    op.create_unique_constraint('_number_address_uc', 'units', ['number', 'address_id'])
    op.drop_index('index_users_on_uid_and_provider', table_name='users')
    op.drop_column('users', 'tokens')
    op.drop_column('users', 'provider')
    op.drop_column('users', 'uid')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('uid', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('provider', sa.VARCHAR(), server_default=sa.text("'email'::character varying"), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('tokens', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.create_index('index_users_on_uid_and_provider', 'users', ['uid', 'provider'], unique=True)
    op.drop_constraint('_number_address_uc', 'units', type_='unique')
    op.create_index('ux_units_number_address', 'units', ['number', 'address_id'], unique=True)
    op.drop_column('businesses', 'employee_count')
    op.drop_column('businesses', 'opened_on')
    op.drop_column('businesses', 'is_closed')
    op.create_table('ar_internal_metadata',
    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('key', name='ar_internal_metadata_pkey')
    )
    op.create_table('schema_migrations',
    sa.Column('version', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version', name='schema_migrations_pkey')
    )
    # ### end Alembic commands ###
